chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
    if (request.action === "fetchQuote") {
        fetch("https://quotes-api-self.vercel.app/quote")
            .then(response => response.json())
            .then(data => {
                if (data && data.quote && data.author) {
                    sendResponse({ quote: data.quote, author: data.author });
                } else {
                    sendResponse({ error: "Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu" });
                }
            })
            .catch(error => {
                console.error("L·ªói khi l·∫•y quote:", error);
                sendResponse({ error: "L·ªói k·∫øt n·ªëi API" });
            });
        return true;
    }
});

const HOUR = 8;  // ƒê·ªïi th√†nh gi·ªù mong mu·ªën (24h format)
const MINUTE = 0; // ƒê·ªïi th√†nh ph√∫t mong mu·ªën

// Khi extension ƒë∆∞·ª£c c√†i ƒë·∫∑t ho·∫∑c b·∫≠t l√™n, ƒë·∫∑t l·ªãch g·ª≠i th√¥ng b√°o
chrome.runtime.onInstalled.addListener(() => {
    scheduleDailyNotification();
});

// Khi ƒë·∫øn gi·ªù h·∫πn, g·ª≠i th√¥ng b√°o
chrome.alarms.onAlarm.addListener((alarm) => {
    if (alarm.name === "dailyMessage") {
        sendDailyNotification();
    }
});

// H√†m l√™n l·ªãch g·ª≠i th√¥ng b√°o v√†o gi·ªù v√† ph√∫t c·ª• th·ªÉ
function scheduleDailyNotification() {
    chrome.alarms.create("dailyMessage", {
        when: getNextAlarmTime(),  // ƒê·∫∑t l·∫ßn ch·∫°y ƒë·∫ßu ti√™n
        periodInMinutes: 1440 // L·∫∑p l·∫°i m·ªói 24 gi·ªù
    });
}

// T√≠nh th·ªùi gian l·∫ßn ch·∫°y ƒë·∫ßu ti√™n
function getNextAlarmTime() {
    let now = new Date();
    let nextAlarm = new Date();
    nextAlarm.setHours(HOUR, MINUTE, 0, 0); // ƒê·∫∑t gi·ªù v√† ph√∫t mong mu·ªën

    // N·∫øu th·ªùi gian hi·ªán t·∫°i ƒë√£ qua gi·ªù h·∫πn, ƒë·∫∑t cho ng√†y mai
    if (now.getTime() > nextAlarm.getTime()) {
        nextAlarm.setDate(nextAlarm.getDate() + 1);
    }

    return nextAlarm.getTime();
}

// G·ª≠i th√¥ng b√°o
function sendDailyNotification() {
    const messages = [
        "Ch√∫c b·∫°n m·ªôt ng√†y tuy·ªát v·ªùi! üåû",
        "H√£y lu√¥n m·ªâm c∆∞·ªùi! üòä",
        "H√¥m nay l√† m·ªôt ng√†y t·ªët l√†nh!",
        "Lu√¥n ti·∫øn v·ªÅ ph√≠a tr∆∞·ªõc! üöÄ",
        "B·∫°n l√†m ƒë∆∞·ª£c m√†! üí™"
    ];
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];

    chrome.notifications.create({
        type: "basic",
        iconUrl: "icon16.png",
        title: "L·ªùi ch√∫c h√¥m nay",
        message: randomMessage,
        requireInteraction: true
    });

    chrome.storage.local.set({ lastNotificationDate: new Date().toDateString() });
}


// Ki·ªÉm tra khi Chrome kh·ªüi ƒë·ªông l·∫°i
chrome.runtime.onStartup.addListener(() => {
    chrome.storage.local.get("lastNotificationDate", (data) => {
        const today = new Date().toDateString();
        
        // N·∫øu ch∆∞a c√≥ th√¥ng b√°o h√¥m nay, g·ª≠i ngay l·∫≠p t·ª©c
        if (data.lastNotificationDate !== today) {
            sendDailyNotification();
        }
    });
});

// Ki·ªÉm tra khi extension ƒë∆∞·ª£c t·∫£i l·∫°i
chrome.runtime.onInstalled.addListener(() => {
    chrome.storage.local.get("lastNotificationDate", (data) => {
        const today = new Date().toDateString();
        
        // N·∫øu ch∆∞a c√≥ th√¥ng b√°o h√¥m nay, g·ª≠i ngay l·∫≠p t·ª©c
        if (data.lastNotificationDate !== today) {
            sendDailyNotification();
        }
    });
});

